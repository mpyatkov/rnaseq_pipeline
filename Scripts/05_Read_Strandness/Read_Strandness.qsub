#!/bin/bash -l

set -o errexit
set -o pipefail
set -o nounset

##################################################################################
#Andy Rampersaud, 02.23.16
#This script is called by setup_UCSC_BigWig.sh
##################################################################################
# Specify which shell to use
#$ -S /bin/bash
# Run on the current working directory
#$ -cwd
# Join standard output and error to a single file  
#$ -j n
# change to y if you want a single qlog file 
##################################################################################

# export all variables from Pipeline_Setup.conf
eval "$(../00_Setup_Pipeline/01_Pipeline_Setup.py --export)"

#checking the command line arg
#-ne : "is not equal to"
if [ $# -ne 1 ] ; then
    echo "Need 1 arguments for the qsub command:"
    echo "qsub -N ${job_name}_${sample_id} -P ${PROJECT} -l h_rt=${TIME_LIMIT} Read_Strandness.qsub ${sample_id}"
    exit 0
fi

SAMPLE_ID=$1
SCRIPT_DIR=$(pwd)

start_time=$(date +"%s")
echo "Starting on : $(date)"
echo "Running on node : $(hostname)"
echo "Current directory : $(pwd)"
echo "Current job ID : $JOB_ID"
echo "Current job name : $JOB_NAME"
echo "Task index number : $SGE_TASK_ID"
echo "Parameter for multiple cores : $NSLOTS"
echo "=========================================================="

# Go to local scratch directory

echo 'Change dir to scratch directory'

cd "${TMPDIR}"

echo 'Print scratch directory location:'
echo "$TMPDIR"
#--------------------------------------

echo 'Loading required modules...'

#Make sure the shebang line = #!/bin/bash -l
#Need the -l option to load modules
module load samtools
module load python3
module load rseqc

# copy user input data files to scratch
cp "${DATASET_DIR}/${SAMPLE_ID}/fastq/tophat2/${SAMPLE_ID}_primary_unique.bam" .

#Initialize INPUT_BAM:
input_bam=${SAMPLE_ID}'_primary_unique.bam'

#Copy Read_Strandness required files:
cp "${SCRIPT_DIR}/Input_Regions/mm9.refseq.bed.gz" .

storage_dir="${DATASET_DIR}/${SAMPLE_ID}/fastq/tophat2"

#Create Read_Strandness output folder to store files:
output_dir='Read_Strandness'
mkdir -p ${output_dir}

#Create output file to store the result:
output_file="${output_dir}/${SAMPLE_ID}_Read_Strandness.txt"

rm -rf  "${output_file}" && touch "${output_file}"

echo 'Unzip files:'
time gzip -d *.gz

echo 'Finished unzipping'
echo 'List files in scratch directory:'
ls -alh
echo 'Starting to run my commands'
echo 'Starting infer_experiment.py command'

# all documentation about infer_experiment.py here:
# http://rseqc.sourceforge.net/#infer-experiment-py

# print command
(set -x; infer_experiment.py --input-file=${input_bam} --refgene=mm9.refseq.bed > $output_file)

echo 'Finished infer_experiment.py command'

#Need to remove first 2 blank lines:
awk 'NR > 2 { print $0 }' "$output_file" > temp1.txt
mv temp1.txt "$output_file"

echo 'Output file from infer_experiment.py:'

head "$output_file"

echo 'Copy output to storage dir'
cp -r "$output_dir" "$storage_dir"

echo "List files in scratch"
ls -alh

echo "Finished on : $(date)"

#end_time in seconds
end_time=$(date +"%s")
diff=$((end_time-start_time))

echo "$((diff / 3600)) hours, $(((diff / 60) % 60)) minutes and $((diff % 60)) seconds elapsed."
echo "=========================================================="
