#!/bin/bash
##################################################################################
#Andy Rampersaud, 02.22.16
##################################################################################
#Assumptions for this job to run correctly:
#1. You have already run the TopHat_Paired_End job
#2. Your data is organized in the following way:
#You have a data set dir such as:
#/projectnb/wax-es/aramp10/G83_Samples
#Within this dir you have sample specific folders such as:
#G83_M1
#G83_M2
#G83_M3
#G83_M4
#Within each sample specific folder you have a "fastq" folder with:
#Files: *_R1_*.fastq.gz and *_R2_*.fastq.gz such as:
#Waxman-TP17_CGATGT_L007_R1_001.fastq.gz
#Waxman-TP17_CGATGT_L007_R2_001.fastq.gz
#Within each sample specific folder you have a "tophat2" folder containing output files
##################################################################################
#Fill in the following information:
##################################################################################
#Information about your data set
#As mentioned above, you should have a data set dir containing your sample specific folders:
#Dataset_DIR=/projectnb/wax-es/aramp10/G83_Samples
##################################################################################
#Samples to process
#To facilitate processing of samples in parallel we can use a text file that lists the samples to analyze
#Note: this text file is still valid even if there is only one sample to process
#You need to have a "Sample_Labels" dir within your Dataset_DIR
#Within the Sample_Labels dir have a Sample_Labels.txt such that:
################################################
#The text file is formatted like the following:
#----------------------------------------------
#Sample_DIR	Sample_ID	Description
#Sample_Waxman-TP17	G83_M1	Male 8wk-pool 1
#Sample_Waxman-TP18	G83_M2	Male 8wk-pool 2
#Sample_Waxman-TP19	G83_M3	Female 8wk-pool 1
#Sample_Waxman-TP20	G83_M4	Female 8wk-pool 2	
#----------------------------------------------
#The 1st column: The Sample_DIR name
#The 2nd column: Waxman Lab Sample_ID 
#The 3rd column: Sample's description 
################################################
#Sample_Labels_DIR=${Dataset_DIR}/Sample_Labels
##################################################################################
#STRAND_RULE option for bam2wig.py:
#---------------------------------------------------------------------------------
#  -d STRAND_RULE, --strand=STRAND_RULE
#                        How read(s) were stranded during sequencing. For
#                        example: --strand='1++,1--,2+-,2-+' means that this is
#                        a pair-end, strand-specific RNA-seq, and the strand
#                        rule is: read1 mapped to '+' => parental gene on '+';
#                        read1 mapped to '-' => parental gene on '-'; read2
#                        mapped to '+' => parental gene on '-'; read2 mapped to
#                        '-' => parental gene on '+'.  If you are not sure
#                        about the strand rule, run 'infer_experiment.py'
#                        default=none (Not a strand specific RNA-seq data).
#---------------------------------------------------------------------------------
#Running the Read_Strandness should indicate the appropriate strand rule
#For example:
#G110_Read_Strandness_Stats.txt indicates all 12 samples are the following:
#-------------------------------------------------------------
#For single-end RNA-seq, there are also two different ways to strand reads:
#    +-,-+
#    read mapped to ‘+’ strand indicates parental gene on ‘-‘ strand
#    read mapped to ‘-‘ strand indicates parental gene on ‘+’ strand
#-------------------------------------------------------------
#--strand=+-,-+
#STRAND_RULE="+-,-+"
#---------------------------------------------------------------------------------
#G83_M1:
#This is PairEnd Data
#Fraction of reads explained by "1++,1--,2+-,2-+": 0.5017
#Fraction of reads explained by "1+-,1-+,2++,2--": 0.4983
#Fraction of reads explained by other combinations: 0.0000
#---------------------------------------------------------------------------------
#The G83 data set is actually unstranded (--strand=none)
#---------------------------------------------------------------------------------
#Choose one:
#Single-end options:
#STRAND_RULE="none"
#STRAND_RULE="+-"
#STRAND_RULE="-+"
#Paired-end options:
#STRAND_RULE="none"
#STRAND_RULE="1++,1--,2+-,2-+"
#STRAND_RULE="1+-,1-+,2++,2--"
#---------------------------------------------------------------------------------
##################################################################################
#BU Username:
#Need to provide your BU Username so the script knows where to look on the waxmanlabvm
#Also, check to confirm that you can log into your waxmanlabvm account
#BU_User="aramp10"
##################################################################################
#Webserver hosting files
#Output files will be hosted on the lab server 
#Log into your account on (waxmanlabvm.bu.edu)
#Make sure the VM_DIR is already created:
#VM_DIR=/home/aramp10/public_html/G83
#Remember:
#You'll need to create UCSC track lines for the UCSC Browser to view the data
##################################################################################
#Need to get the current dir
#SCRIPT_DIR=$(pwd)
##################################################################################
#Time hour limit
#On SCC a 12-hour runtime limit is enforced on all jobs, unless specified explicitly. 
#A runtime limit can be specified in the format "hh:mm:ss"
#Dont change the following time limit value unless you know that your job is going to go over 12 hrs 
#TIME_LIMIT="12:00:00"
##################################################################################
