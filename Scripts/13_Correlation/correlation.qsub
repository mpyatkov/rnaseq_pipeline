#!/bin/bash -l

#$ -S /bin/bash
#$ -cwd
#$ -j y
#$ -e ./logs/
#$ -o ./logs/

set -o errexit
set -o pipefail
set -o nounset

# module load R/3.6.0

# export all variables from Pipeline_Setup.conf
eval "$(../00_Setup_Pipeline/01_Pipeline_Setup.py --export)"

set +eu
module load miniconda
conda activate --stack ${CONDA_DIR}/rlang361
set -eu

DEDIR=$1 # 09a, 09b, 09c,...
SCRIPT_DIR="$(pwd)"

declare -A OUTDIR_DICT=( [09a]="13a_RefSeq24_HTSeq_ExonCollapsed" \
                         [09b]="13b_RefSeq24k_featureCounts_ExonCollapsed" \
                         [09c]="13c_LncRNA15k_ExonCollapsed" \
                         [09d]="13d_RefSeqLncRNA76k_ExonCollapsed" )

declare -A DETITLE_DICT=( [09a]="RefSeq24k" [09b]="RefSeq24k" [09c]="LncRNA15k" [09d]="RefSeqLncRNA76k" )

function combined_pdf() {
    local OUTNAME=$1
    
    # ALL=$(find . -name "*All*pdf" -o -name "*_Sig*pdf" | sort -n)
    # ALL+=" "
    # ALL+=$(find . -iname "*_non*.pdf" | sort -n)
    # pdfunite $(echo $ALL | paste -s -d " ") ${OUTNAME}

    ALL=($(find . -name "*All*pdf" -o -name "*_Sig*pdf" | sort -n))
    ALL+=($(find . -iname "*_non*.pdf" | sort -n))
    # echo "${ALL[@]}"
    pdfunite ${ALL[@]} ${OUTNAME}

    # remove all individual pdf files
    rm -rf ${ALL[@]}

    # copy csv files in one directory
    # for Pearson/Spearman 
    if [[ "${OUTNAME}" =~ Pearson|Spearman ]]; then
	mkdir -p Correlation_CSVs
	mv *.csv ./Correlation_CSVs
    elif [[ "${OUTNAME}" =~ _PCA_ ]]; then
	mkdir -p Non-significant_genes
	mv *.csv ./Non-significant_genes
    else
	# "TSNE or RPCA, do nothing"
	echo -n ""
    fi
}

function calc_correlation()
{
    local SEARCH_BODY=$1
    local OUTDIR=$2
    local DETITLE=$3

    PCOR=Pearson_correlation
    SCOR=Spearman_correlation

    rm -rf ${OUTDIR} && mkdir -p ${OUTDIR}
    cp ${SCRIPT_DIR}/*.R ./${OUTDIR}

    # copy file with correct group names for PCA
    cp SAMPLE_CONDNAME.tsv ./${OUTDIR}

    pushd ${OUTDIR}
    
    rm -rf PCA && mkdir -p PCA
    rm -rf TSNE && mkdir -p TSNE
    rm -rf RPCA && mkdir -p RPCA
    rm -rf RPCA_Score && mkdir -p RPCA_Score
    rm -rf ${PCOR} && mkdir -p ${PCOR}
    rm -rf ${SCOR} && mkdir -p ${SCOR}

    # dd=$(find ../09b_DE_* -name "DiffEx*GeneBody*txt")
    echo "current path: $(pwd)"
    echo "${SEARCH_BODY}"
    defiles=$(eval find ${SEARCH_BODY})

    for fname in $defiles
    do
	# extract comparison number (09d_1_... --> 1)
	prefix=$(echo $fname | grep -Po "_\K([0-9][0-9]?)(?=_)" | head -n1 |tr -d '\n')
	
	# copy with prefix in the begining
	cp $fname "./${prefix}_$(basename $fname)"
    done
    
    # DATASET_LABEL exported from the Pipeline_Setup.conf, Step_0
    Rscript pearson_script.R $DATASET_LABEL $DETITLE ${DEFAULT_FC} ${DEFAULT_FDR}
    
    # mv all plots to corresponding directories
    mv *_Pearson* ./${PCOR}
    mv *_Spearman* ./${SCOR}
    mv *_PCA_* ./PCA/
    mv *_TSNE_* ./TSNE/
    mv *_RPCA_* ./RPCA/
    mv *_RPCAscore_* ./RPCA_Score/

    # remove all Diff.Exp files
    rm -rf *DiffExp*
    
    # create combined pdf files 
    # (cd ${PCOR}; ls -la)

    OUTNAME=$(basename ${OUTDIR})

    (cd ${PCOR}; combined_pdf "${OUTNAME}_Pearson_Combined.pdf")
    (cd ${SCOR}; combined_pdf "${OUTNAME}_Spearman_Combined.pdf")
    (cd PCA; combined_pdf "${OUTNAME}_PCA_Combined.pdf")
    (cd TSNE; combined_pdf "${OUTNAME}_TSNE_Combined.pdf")
    (cd RPCA; combined_pdf "${OUTNAME}_RPCA_Combined.pdf")
    (cd RPCA_Score; combined_pdf "${OUTNAME}_RPCAscore_Combined.pdf")

    rm ./*.R
    rm ./SAMPLE_CONDNAME.tsv
    popd
}

function montage_pca_plots(){

    # - copy 3 resulted pdf to one directory
    # - disassemble 3 pdf (RPCA, RPCAscores, PCA) by pages
    # - montage i-pages (where i=1,2,3,..) as one i-out page
    # - combine i-out pages in one pdf file
    
    local OUTDIR=$1
    local LOCALDIR="Tiled_PCA"
    local OUTNAME="$(basename ${OUTDIR})_${LOCALDIR}_Combined.pdf"
    
    mkdir -p "${OUTDIR}/${LOCALDIR}"

    pushd "${OUTDIR}/${LOCALDIR}"

    ## disassemble pdf files
    cp ../PCA/*.pdf ./
    cp ../RPCA/*.pdf ./
    cp ../RPCA_Score/*.pdf ./
    cp ../Pearson_correlation/*.pdf ./
    
    pdfseparate *_PCA_*.pdf %d_PCA.pdf
    rm -rf *_PCA_*.pdf

    pdfseparate *_RPCAscore_*.pdf %d_RPCAscore.pdf
    rm -rf *_RPCAscore_*.pdf

    pdfseparate *_RPCA_*.pdf %d_RPCA.pdf
    rm -rf *_RPCA_*.pdf

    pdfseparate *_Pearson_*.pdf %d_Pearson.pdf
    rm -rf *_Pearson_*.pdf

    # number of PCA plots (for the Pearson correlation we will have
    # have some extra plots which we should to remove)
    NUMBER_OF_PLOTS=$(find . -name "*_PCA*pdf" | wc -l)

    # remove 3, 4 and 2*n+4 pages (starting from 1) - this is
    # all,sign,non-sign pages for all genes
    (set -x; rm -rf 3_Pearson.pdf 4_Pearson.pdf "$((2*${NUMBER_OF_PLOTS}/3+4))_Pearson.pdf")
        
    # renumerate indexes of files ex. (1_Pearson.pdf,2_Pearson.pdf,4_Pearson.pdf) -> (1..,2..,3..)
    pearpages=($(find . -name "*_Pearson.pdf" | xargs -n1 basename | sort -n))
    for i in ${!pearpages[@]}; do
	# create new index
	let NEWIX=${i}+1
	
	# extract the part after the underscore (1_[bla.txt])
	BODY=$(echo ${pearpages[$i]} | cut -d'_' -f2)
    
	# rename file using new index if required 
	if [ ${pearpages[$i]} != "${NEWIX}_${BODY}" ]; then
	    mv ${pearpages[$i]} "${NEWIX}_${BODY}"
	fi
    done

    ## montage 4 (PCA,RPCA,RPCAScore,Pearson) files in one
    for ((i=1; i<=${NUMBER_OF_PLOTS}; i++)); do
	echo "montage ${i} 4 plots of PCA,RPCA,RPCAScore,Pearson"
	montage -geometry +3+3 -tile 2x2 "${i}_RPCA.pdf" "${i}_PCA.pdf" "${i}_RPCAscore.pdf" "${i}_Pearson.pdf" "${i}_montage.pdf"
	rm -rf "${i}_RPCA.pdf" "${i}_PCA.pdf" "${i}_RPCAscore.pdf" "${i}_Pearson.pdf"
    done

    ## combine all montaged files in one output
    montage_files=($(find . -name "*montage*pdf" | xargs -n1 basename | sort -n))
    pdfunite ${montage_files[@]} ${OUTNAME}
    rm -rf ./*montage*
    popd
    
}

echo "Start ${OUTDIR_DICT[$DEDIR]}: $(date)"
calc_correlation "../../../${DEDIR}_DE_* -name 'DiffEx*ExonCollapsed*txt'" "./Job_Summary/${OUTDIR_DICT[$DEDIR]}" "${DETITLE_DICT[$DEDIR]}"

echo "Start montaging the PCA plots"
montage_pca_plots "./Job_Summary/${OUTDIR_DICT[$DEDIR]}"

## Special symbol that step is ok (do not remove it)
echo "IAMOK"
